// Generated by gencpp from file Flight/destinate.msg
// DO NOT EDIT!


#ifndef FLIGHT_MESSAGE_DESTINATE_H
#define FLIGHT_MESSAGE_DESTINATE_H

#include <ros/service_traits.h>


#include <Flight/destinateRequest.h>
#include <Flight/destinateResponse.h>


namespace Flight
{

struct destinate
{

typedef destinateRequest Request;
typedef destinateResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct destinate
} // namespace Flight


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::Flight::destinate > {
  static const char* value()
  {
    return "685a8a8431827e326400ebccd41b7c28";
  }

  static const char* value(const ::Flight::destinate&) { return value(); }
};

template<>
struct DataType< ::Flight::destinate > {
  static const char* value()
  {
    return "Flight/destinate";
  }

  static const char* value(const ::Flight::destinate&) { return value(); }
};


// service_traits::MD5Sum< ::Flight::destinateRequest> should match 
// service_traits::MD5Sum< ::Flight::destinate > 
template<>
struct MD5Sum< ::Flight::destinateRequest>
{
  static const char* value()
  {
    return MD5Sum< ::Flight::destinate >::value();
  }
  static const char* value(const ::Flight::destinateRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::Flight::destinateRequest> should match 
// service_traits::DataType< ::Flight::destinate > 
template<>
struct DataType< ::Flight::destinateRequest>
{
  static const char* value()
  {
    return DataType< ::Flight::destinate >::value();
  }
  static const char* value(const ::Flight::destinateRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::Flight::destinateResponse> should match 
// service_traits::MD5Sum< ::Flight::destinate > 
template<>
struct MD5Sum< ::Flight::destinateResponse>
{
  static const char* value()
  {
    return MD5Sum< ::Flight::destinate >::value();
  }
  static const char* value(const ::Flight::destinateResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::Flight::destinateResponse> should match 
// service_traits::DataType< ::Flight::destinate > 
template<>
struct DataType< ::Flight::destinateResponse>
{
  static const char* value()
  {
    return DataType< ::Flight::destinate >::value();
  }
  static const char* value(const ::Flight::destinateResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // FLIGHT_MESSAGE_DESTINATE_H
